% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify_idt.R
\name{classify_idt}
\alias{classify_idt}
\title{Classify Fixations by Dispersion Threshold}
\format{
Input data frame columns
\describe{
  \item{gazeHasValue}{Boolean if there is valid gaze data}
  \item{eyeDataRelativeTimestamp}{Timestamp of the data}
  \item{gazeorigin_x}{X coordinates of the gaze origin}
  \item{gazeorigin_y}{Y coordinates of the gaze origin}
  \item{gazeorigin_z}{Z coordinates of the gaze origin}
  \item{gazePoint_x}{X coordinates of the gaze point}
  \item{gazePoint_y}{Y coordinates of the gaze point}
  \item{gazePoint_z}{Z coordinates of the gaze point}
}

Additional columns in output
\describe{
  \item{eventIndex}{Index of the event in which the gaze point lies}
  \item{eventType}{Type of the current event}
  \item{eventDuration}{Duration of the current event}
  \item{fixation_x}{X coordinate of the current fixation (if eventType is a fixation)}
  \item{fixation_y}{Y coordinate of the current fixation (if eventType is a fixation)}
  \item{fixation_z}{Z coordinate of the current fixation (if eventType is a fixation)}
}
}
\usage{
classify_idt(data, dispersion_threshold = 1.6, time_window = 250)
}
\arguments{
\item{data}{Data frame of the eye tracking data we want to process}

\item{dispersion_threshold}{Dispersion threshold in degrees}

\item{time_window}{Time window in ms (minimum fixation duration)}
}
\value{
The input data frame with the classification columns added
}
\description{
Classify each gaze point based on the dispersion of gaze points.
}
\details{
This is an implementation of the fixation classification by dispersion threshold as described by \href{https://doi.org/10.3390/s20174956}{Llanes-Jurado et al. (2020, doi:10.3390/s20174956)}.
It uses the distance-dispersion threshold to identify fixations with the specified threshold and minimum duration.

According to Llanes-Jurado et al. the acceptable parameter ranges for a HTC Vive Pro Eye HMD is between 1-1.6 degrees and 0.25-0.4 seconds
with 1 degree and 0.25 seconds being the optimum.
Due to the different precision of the HoloLens 2 eye tracker these thresholds most likely can't be transferred without adaption.
}
